---
name: Prepare Zip File

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: Environment
        required: true
        default: "dev"
        options:
          - dev
          - staging
          - live
      release:
        type: string
        description: Release
        required: false
        default: ""

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      region: "eu-west-2"
      release: ${{ github.event.inputs.release }}

    steps:
      - name: checkout repo with release
        if: "${{ env.release != '' }}"
        uses: actions/checkout@v3
        with:
          ref: "${{ env.release }}"

      - name: checkout repo with branch
        if: "${{ env.release == '' }}"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Configure AWS Credentials for dev
        if: "${{ github.event.inputs.deploy-environment == 'dev' }}"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
          aws-region: eu-west-2

      - name: Configure AWS Credentials for staging
        if: "${{ github.event.inputs.deploy-environment == 'staging' }}"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_STAGING }}
          aws-region: eu-west-2

      - name: Configure AWS Credentials for live
        if: "${{ github.event.inputs.deploy-environment == 'live' }}"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_LIVE }}
          aws-region: eu-west-2

      - name: run prep script
        env:
          REPO_NAME: "${{ github.event.repository.name }}"
        run: |
          echo "version: 0.0" > appspec.yml
          echo "os: linux" >> appspec.yml
          echo "files:" >> appspec.yml
          echo "  - source: '/'" >> appspec.yml
          echo "    destination: '/var/www/html/wp-content/themes/$REPO_NAME'" >> appspec.yml
          echo "file_exists_behavior: OVERWRITE" >> appspec.yml
          echo "hooks:" >> appspec.yml
          echo "  BeforeInstall:" >> appspec.yml
          echo "  - location: './prep-env.sh'" >> appspec.yml
          echo "    timeout: 60" >> appspec.yml
          echo "  - AfterInstall:" >> appspec.yml
          echo "    location: './permissions.sh'" >> appspec.yml
          echo "    timeout: 60" >> appspec.yml
          echo "#!/bin/bash" > prep-env.sh
          echo "mkdir -p "/var/www/html/wp-content/themes/$REPO_NAME" >> prep-env.sh
          echo "#!/bin/bash" > permissions.sh
          echo "sudo chown -R apache:apache "/var/www/html/wp-content/themes/$REPO_NAME" >> permissions.sh
          cd ..
          zip -r $REPO_NAME.zip $REPO_NAME -x "*.git*" -x "*.devops*"
          aws s3 cp $REPO_NAME.zip s3://ds-${{ github.event.inputs.deploy-environment }}-deployment-source/website/$REPO_NAME.zip
...
